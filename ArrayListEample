import java.util.*;
public class ArrayListEx{
public static void main(String[] args){

//__________functions_________
// "get(index)" ----> to get the particular value of... that the mentioned index.
// Here the codeL1 is created with empty list and then we add the elements using "add()".
// We can use functions like "size()" ---> used for... to know ArrayList size.
// "remove(index)" or "remove(value)" ---> is used to remove elements from list, using the index or the value.
// "set(index, "value")" ---> is used for setting the index value with new one (like replacing the previous one with new value in that particularly mentioned index.)

//__________Methods____________
// "Collections.sort(codeL1)" ---- it's an example for sorting the array elements... like for String use alphabetic order and for numeric use numbers.

ArrayList<String> codeL1 = new ArrayList<String>(); //<--Empty List'.
codeL1.add("C");
codeL1.add("Cpp");
codeL1.add("Python");
codeL1.add("Java");
codeL1.add("HTML");
System.out.println(codeL1);
System.out.println(codeL1.get(2));  // ----> the o/p: Python 
		System.out.println(codeL1.size());
		codeL1.remove(1);
		System.out.println(codeL1);
		codeL1.set(0, "JavaScript");
		System.out.println(codeL1);
if(codeL1.contains("HTML")){
System.out.println("The HTML element found");
}
else{
System.out.println("The HTML element not found");
}
for(String str:codeL1){  //------> this for-each loop is used to print the elements in line by line.
System.out.println(str);
}
		

// or write code like

//Here the codeL2 is created with initialized list like fixed elements using "Arrays.asList". 
ArrayList<String> codeL2 = new ArrayList<String>(Arrays.asList("Java", "Python"));
System.out.println(codeL2);

ArrayList<Integer> i = new ArrayList<Integer>();
		i.add(10);
		i.add(1);
		i.add(15);
		i.add(70);
		i.add(04);
		i.add(19);
		Collections.sort(i);
		System.out.println(i);

}
}


